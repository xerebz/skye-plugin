(function() {

  var skye = <%= Dir.glob(File.expand_path("../../../public/images/*.png", __FILE__)).map{|f| File.basename(f).split(".")[0]}.inspect %>;

  Discourse.Dialect.inlineBetween({
    start: '^',
    stop: '^',
    emitter: function(contents) {
      var url = Discourse.getURL('/plugins/skye-plugin/images/thumbnails/' + contents + '.png');
      return ['img', {href: url, 'class': 'skye-item'}];
    }
  });

  // TODO: Make this a proper ES6 import
  var ComposerView = (Discourse && Discourse.ComposerView) || (typeof require !== "undefined" && require('discourse/views/composer').default);
  
  if (ComposerView) {
    ComposerView.on("initWmdEditor", function(event){

      var baseUrl = Discourse.getURL("/");

      template = Handlebars.compile("<div class='autocomplete'>" +
                                       "<ul>" +
                                          "{{#each options}}" +
                                              "<li>" +
                                                "<a href='#'>" +
                                                "<img src='" + baseUrl + "plugins/skye-plugin/images/thumbnails/{{this}}.png'> " +
                                                "{{this}}</a>" +
                                              "</li>" +
                                          "{{/each}}" +
                                       "</ul>" +
                                    "</div>");

      $('#wmd-input').autocomplete({
        template: template,
        key: "^",
        transformComplete: function(v){ return v + "^"; },
        dataSource: function(term){
          term = term.toLowerCase();

          if (term === "") {
            return Ember.RSVP.resolve(["SugarlessCandy-LavenderDrop-HeartUGazeEyes", "SkyeERCitizenUniform-Navy-Loafers", "CheerfulGlint-AshBrown-Eyebrows", "BehindTheBlossoms-Red-Glasses", "BehindTheBlossoms-Blush-Makeup"]);
          }

          var options = [];
          var i;
          for (i=0; i < skye.length; i++) {
            if (skye[i].toLowerCase().indexOf(term) === 0) {
              options.push(skye[i]);
              if(options.length > 4) { break; }
            }
          }

          if (options.length <= 4) {
            for (i=0; i < skye.length; i++) {
              if (skye[i].toLowerCase().indexOf(term) > 0) {
                options.push(skye[i]);
                if(options.length > 4) { break; }
              }
            }
          }

          return Ember.RSVP.resolve(options);
        }
      });
    });
  }

  Discourse.Markdown.whiteListTag('img', 'class', 'skye-item');
}).call(this);
